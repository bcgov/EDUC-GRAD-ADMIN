---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: "${APP_NAME}-backend-template"
metadata:
  name: "${APP_NAME}-backend"
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: "${APP_NAME}-backend"
        app.kubernetes.io/part-of: GRAD-ADMIN
        app.openshift.io/runtime: nodejs
      name: "${APP_NAME}-backend"
    spec:
      replicas: ${{MIN_REPLICAS}}
      selector:
        matchLabels:
          app: "${APP_NAME}-backend"
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
      template:
        metadata:
          labels:
            app: "${APP_NAME}-backend"
        spec:
          containers:
            - name: "${APP_NAME}-backend"
              image: image-registry.openshift-image-registry.svc:5000/${IS_NAMESPACE}/${APP_NAME}-backend:${TAG_NAME}
              imagePullPolicy: Always
              ports:
                - containerPort: ${{CONTAINER_PORT}}
                  protocol: TCP
              envFrom:
                - configMapRef:
                    name: "${APP_NAME}-backend-config-map"
                - secretRef:
                    name: grad-admin-client-test-run-secret
                - secretRef:
                    name: grad-admin-service-test-run-secret
              resources:
                requests:
                  cpu: "${MIN_CPU}"
                  memory: "${MIN_MEM}"
                limits:
                  cpu: "${MAX_CPU}"
                  memory: "${MAX_MEM}"
              volumeMounts:
                - name: log-storage
                  mountPath: /logs
            - name: "${APP_NAME}-fluent-bit-sidecar"
              image: artifacts.developer.gov.bc.ca/docker-remote/fluent/fluent-bit:1.5.7
              imagePullPolicy: Always
              imagePullSecrets:
                - name: artifactory-creds
              volumeMounts:
                - name: log-storage
                  mountPath: /mnt/log
                - name: flb-sc-config-volume
                  mountPath: /fluent-bit/etc/
              readinessProbe:
                tcpSocket:
                  port: 2020
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              livenessProbe:
                httpGet:
                  path: /
                  port: 2020
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              ports:
                - containerPort: 2020
                  protocol: TCP
                  name: metrics
              resources:
                requests:
                  cpu: "5m"
                  memory: "32Mi"
                limits:
                  cpu: "15m"
                  memory: "64Mi"
          volumes:
            - name: log-storage
              emptyDir: { }
            - name: flb-sc-config-volume
              configMap:
                name: "${APP_NAME}-flb-sc-config-map"
      test: false
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${APP_NAME}-backend"
      name: "${APP_NAME}-backend"
    spec:
      ports:
        - name: ${CONTAINER_PORT}-tcp
          port: ${{CONTAINER_PORT}}
          protocol: TCP
      selector:
        app: "${APP_NAME}-backend"
  # route for backend .grad.gov.bc.ca/api
  - apiVersion: v1
    kind: Route
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: "${APP_NAME}-backend"
      name: "${APP_NAME}-backend-${ENVIRONMENT}"
    spec:
      host: "${BASE_URL}"
      path: "/api"
      to:
        kind: Service
        name: "${APP_NAME}-backend"
        weight: 100
      wildcardPolicy: None
      port:
        targetPort: 8080-tcp
      tls:
        caCertificate: "${CA_CERT}"
        certificate: "${CERTIFICATE}"
        insecureEdgeTerminationPolicy: Redirect
        key: "${PRIVATE_KEY}"
        termination: edge
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: "${APP_NAME}-backend"
      name: "${APP_NAME}-backend"
      annotations:
        haproxy.router.openshift.io/timeout: 600s
    spec:
      host: "${HOST_ROUTE}"
      path: "${HOST_PATH}"
      port:
        targetPort: ${CONTAINER_PORT}-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: "${APP_NAME}-backend"
        weight: 100
      wildcardPolicy: None
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: "${APP_NAME}-backend-cpu-autoscaler"
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: "${APP_NAME}-backend"
        subresource: scale
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              averageUtilization: 150
              type: Utilization
        - type: Resource
          resource:
            name: memory
            target:
              averageUtilization: 150
              type: Utilization
parameters:
  - name: APP_NAME
    description: Application name
    required: true
  - name: IS_NAMESPACE
    description: The namespace where the imagestream lives
    required: true
  - name: TAG_NAME
    description: Imagestream tag name
    required: false
    value: latest
  - name: HOST_ROUTE
    description: The host the route will use to expose service outside cluster
    required: true
  - name: CONTAINER_PORT
    description: The port on which the application will be accessible
    required: false
    value: "8080"
  - name: HOST_PATH
    description: The path appended to the HOST_ROUTE where the root of this project will be served
    required: false
    value: "/api"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas
    required: true
  - name: MAX_REPLICAS
    description: The maximum amount of replicas
    required: true
  - name: MIN_CPU
    description: The minimum amount of cpu
    required: true
  - name: MAX_CPU
    description: The maximum amount of cpu
    required: true
  - name: MIN_MEM
    description: The minimum amount of memory
    required: true
  - name: MAX_MEM
    description: The maximum amount of memory
    required: true
  - name: ENVIRONMENT
    description: dev, test, prod
    required: true
  - name: CA_CERT
    description: The CA Certificate
    required: true
  - name: CERTIFICATE
    description: The Certificate
    required: true
  - name: PRIVATE_KEY
    description: The private key
    required: true
  - name: BASE_URL
    description: Base url. Example dev.grad.gov.bc.ca. Not prepended with https://
    required: true
