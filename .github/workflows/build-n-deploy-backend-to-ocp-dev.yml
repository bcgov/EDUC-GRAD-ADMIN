name: Build & Deploy Backend-DEV

env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  DOCKER_ARTIFACTORY_REPO: artifacts.developer.gov.bc.ca/docker-remote
  ARTIFACTORY_REPO: artifacts.developer.gov.bc.ca
  APP_NAME: "educ-grad-admin"
  APP_NAME_BACKEND: "educ-grad-admin-backend"
  TAG: "latest"

on:
  workflow_dispatch:
  #push:
    #branches:
      #- 'main'
    #paths:
      #- 'backend/**'

jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    environment: dev
    env:
      OPENSHIFT_NAMESPACE: ${{ secrets.UI_NAMESPACE }}-dev
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_ARTIFACTORY_REPO }}
          username: ${{ secrets.DOCKER_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.DOCKER_ARTIFACTORY_ACCESS_TOKEN }}

      # https://github.com/redhat-actions/buildah-build#readme
      - name: Build backend from Dockerfile
        id: build-image-backend
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.APP_NAME_BACKEND }}
          tags: ${{ env.TAG }}
          dockerfiles: |
            ./backend/Dockerfile
          context: ./backend

        # https://github.com/redhat-actions/push-to-registry#readme
      - name: Push backend to registry
        id: push-image-backend
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-backend.outputs.image }}
          tags: ${{ steps.build-image-backend.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Tag latest image
        run: |
          set -eux
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE }}
          echo "Tagging image for OpenShift deployment"
          # Create the image stream if it doesn't exist
          oc create imagestream ${{ env.APP_NAME_BACKEND}} 2> /dev/null || true && echo "Backend image stream in place"
          oc tag ${{ steps.push-image-backend.outputs.registry-path }} ${{ env.APP_NAME_BACKEND }}:${{ env.TAG }}

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    env:
      OPENSHIFT_NAMESPACE: ${{ secrets.UI_NAMESPACE }}-dev
      KEYCLOAK_URL: ${{ secrets.KEYCLOAK_URL }}
      KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
      HOST_ROUTE: "educ-grad-admin-${{ secrets.UI_NAMESPACE }}-dev.apps.silver.devops.gov.bc.ca"
      TARGET_ENV: "dev"
      MIN_CPU: "60m"
      MAX_CPU: "120m"
      MIN_MEM: "250Mi"
      MAX_MEM: "400Mi"
      MIN_REPLICAS: "1"
      MAX_REPLICAS: "2"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install axios
          npm install mustache

      - name: Create/Update clients
        run: node ./tools/config/clients-and-scopes.js

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Deploy
        run: |
          set -eux
          echo "Deploying to to dev from branch: ${{ github.ref }}"
          # Login to OpenShift and select project
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE }}
          # Cancel any rollouts in progress
          oc rollout cancel deployment/${{ env.APP_NAME_BACKEND }} 2> /dev/null \
          || true && echo "No rollout in progress"

          # Process template
          oc process -f tools/openshift/backend-dc.yaml \
          -p IS_NAMESPACE=${{ env.OPENSHIFT_NAMESPACE }} \
          -p APP_NAME=${{ env.APP_NAME }} \
          -p HOST_ROUTE=${{ env.HOST_ROUTE }} \
          -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} \
          -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} \
          -p MIN_CPU=${{ env.MIN_CPU }} \
          -p MAX_CPU=${{ env.MAX_CPU }} \
          -p MIN_MEM=${{ env.MIN_MEM }} \
          -p MAX_MEM=${{ env.MAX_MEM }} \
          -p BASE_URL=${{ env.TARGET_ENV }}.grad.gov.bc.ca \
          -p ENVIRONMENT=${{ env.TARGET_ENV }} \
          -p CERTIFICATE="${{ secrets.CERTIFICATE }}" \
          -p CA_CERT="${{ secrets.CA_CERT }}" \
          -p PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" \
          | oc apply -n ${{ env.OPENSHIFT_NAMESPACE }} -f -
          
          # update configmap
          bash tools/openshift/update-configmap-backend.sh \
          ${{ env.TARGET_ENV }} \
          ${{ env.APP_NAME }} \
          ${{ env.OPENSHIFT_NAMESPACE }} \
          ${{ env.TARGET_ENV }}.grad.gov.bc.ca \
          ${{ secrets.SOAM_CLIENT_SECRET }} \
          ${{ secrets.REDIS_PASSWORD }} \
          ${{ secrets.SPLUNK_TOKEN }} \
          ${{ secrets.COMMON_NAMESPACE }} \
          ${{ secrets.GRAD_NAMESPACE }} \
          ${{ secrets.GRAD_BUSINESS_NAMESPACE }} \
          ${{ secrets.SOAM_SERVICE_CLIENT_SECRET }} \
          ${{ secrets.STUDENT_ADMIN_NAMESPACE }} \
          ${{ secrets.STUDENT_ASSESSMENT_NAMESPACE }}
          
          # Start rollout (if necessary) and follow it
          oc rollout restart deployment/${{ env.APP_NAME_BACKEND }} 

          # Get status, returns 0 if rollout is successful
          oc rollout status deployment/${{ env.APP_NAME_BACKEND }}